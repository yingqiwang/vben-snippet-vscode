{
  "vbTableKey": {
    "prefix": "vbTable",
    "body": [
      "<template>",
      "  <div>",
      "    <BasicTable @register=\"registerTable\">",
      "      <template #toolbar>",
      "        <a-button type=\"primary\" @click=\"handleCreate\"> demo</a-button>",
      "      </template>",
      "      <template #bodyCell=\"{column, record }\">",
      "       <template v-if=\"column.key === 'action'\">",
      "        <TableAction",
      "          :actions=\"[",
      "            {",
      "              icon: 'clarity:note-edit-line',",
      "              onClick: handleEdit.bind(null, record),",
      "            },",
      "            {",
      "              icon: 'ant-design:delete-outlined',",
      "              color: 'error',",
      "              popConfirm: {",
      "                title: '是否确认删除？',",
      "                confirm: handleDelete.bind(null, record),",
      "              },",
      "            },",
      "          ]\"",
      "        />",
      "       </template>",
      "      </template>",
      "    </BasicTable>",
      "    <RoleModal @register=\"registerModal\" @success=\"handleSuccess\" />",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "  import { defineComponent, onMounted, onUnmounted, reactive, toRefs } from 'vue';",
      "  import { BasicTable, useTable, TableAction } from '/@/components/Table';",
      "  import { useMessage } from '/@/hooks/web/useMessage';",
      "  import { useModal } from '/@/components/Modal';",
      "  import { columns } from './role.data';",
      "  export default defineComponent({",
      "    name: 'RoleManagement',",
      "    components: {",
      "      BasicTable,",
      "      TableAction,",
      "    },",
      "    setup() {",
      "      const { createMessage } = useMessage();",
      "      const [registerModal, { openModal }] = useModal();",
      "      let stateData = reactive({});",
      "      const [registerTable, { reload }] = useTable({",
      "        title: 'demo',",
      "        // api: your API name,",
      "        columns,",
      "        canResize: false,",
      "        showTableSetting: true,",
      "        bordered: true,",
      "        showIndexColumn: false,",
      "        actionColumn: {",
      "          width: 70,",
      "          title: '操作',",
      "          dataIndex: 'action',",
      "         },",
      "      });",
      "      function handleCreate() {",
      "        openModal(true, {",
      "          isUpdate: false,",
      "        });",
      "      }",
      "      function handleDelete(record: Recordable) {",
      "        console.log(record);",
      "        reload();",
      "      }",
      "      function handleEdit(record: Recordable) {",
      "        console.log(record);",
      "        openModal(true, {",
      "          record,",
      "          isUpdate: true,",
      "        });",
      "      }",
      "      onMounted(() => {});",
      "      onUnmounted(() => {});",
      "      function handleSuccess() {",
      "        reload();",
      "      }",
      "      return {",
      "        registerTable,",
      "        registerModal,",
      "        handleCreate,",
      "        handleEdit,",
      "        handleSuccess,",
      "        createMessage,",
      "        reload,",
      "        handleDelete,",
      "        ...toRefs(stateData),",
      "      };",
      "    },",
      "  });",
      "</script>",
      "",
      "<style lang=\"scss\" scoped></style>",
      ""
    ],
    "description": "Table&Modal"
  },
  "vbcolumns": {
    "prefix": "vbcolumns",
    "body": [
      "import { BasicColumn } from '/@/components/Table';",
      "export const columns: BasicColumn[] = [",
      "  {",
      "    title: 'name',",
      "    dataIndex: 'name',",
      "    width: 90,",
      "  },",
      "  {",
      "    title: 'age',",
      "    dataIndex: 'age',",
      "    width: 150,",
      "  },",
      "];"
    ],
    "description": "table columns"
  }
}